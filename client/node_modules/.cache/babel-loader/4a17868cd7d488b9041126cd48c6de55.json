{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brianhinterlong/Documents/Sites/tfn-full/client/src/components/shopping/UpdateShoppingListForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport api from \"../../utils/api\"; //import userEvent from \"@testing-library/user-event\";\n\nconst UpdateShoppingListsForm = props => {\n  _s();\n\n  const [name, setName] = useState(props.name);\n  const [items, setItems] = useState([{\n    quantity: \"\",\n    unit: \"\",\n    itemName: \"\"\n  }]);\n  const [selectedShoppingList, setSelectedShoppingList] = useState(props.selectedShoppingList);\n  const clearSelectedShoppingList = props.clearHandle;\n  useEffect(() => {\n    const id = selectedShoppingList.id;\n    api.get(`http://3.92.28.166:5000/api/shopping_lists/${id}`).then(response => {\n      console.log(response.data);\n      setName(response.data.name);\n      setItems(response.data.items);\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n    console.log(selectedShoppingList);\n    setSelectedShoppingList(props.selectedShoppingList);\n    console.log(`After: ${selectedShoppingList}`);\n  }, [props.selectedShoppingList, selectedShoppingList]);\n\n  const handleAddFields = () => {\n    const values = [...items];\n    values.push({\n      quantity: \"\",\n      unit: \"\",\n      itemName: \"\"\n    });\n    setItems(values);\n  };\n\n  const handleRemoveFields = index => {\n    const values = [...items];\n\n    if (index > 0) {\n      values.splice(index, 1);\n    }\n\n    setItems(values);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...items];\n\n    if (event.target.name === \"quantity\") {\n      values[index].quantity = event.target.value;\n    } else if (event.target.name === \"unit\") {\n      values[index].unit = event.target.value;\n    } else if (event.target.name === \"item\") {\n      values[index].itemName = event.target.value;\n    }\n\n    setItems(values);\n  };\n\n  const handleNameChange = event => {\n    let nameValue = name;\n\n    if (event.target.name === 'name') {\n      nameValue = event.target.value;\n    }\n\n    setName(nameValue);\n  };\n\n  const reqBody = JSON.stringify({\n    name,\n    items\n  }, null, 2);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //let res = await api.post('/shopping_lists', reqBody);\n\n    api.put(`http://3.92.28.166:5000/api/shopping_lists/${selectedShoppingList.id}`, reqBody).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n    console.log(reqBody);\n  };\n\n  const handleDelete = () => {\n    api.delete(`http://3.92.28.166:5000/api/shopping_lists/${selectedShoppingList.id}`).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-shopping-list d-flex p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-group border border-primary p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            value: name,\n            onChange: event => handleNameChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-sm-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"quanity\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"quantity\",\n                name: \"quantity\",\n                value: item.quantity,\n                onChange: event => handleInputChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-sm-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"unit\",\n                children: \"Unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"unit\",\n                name: \"unit\",\n                value: item.unit,\n                onChange: event => handleInputChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-sm-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"item\",\n                children: \"Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"item\",\n                name: \"item\",\n                value: item.itemName,\n                onChange: event => handleInputChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-sm-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link\",\n                type: \"button\",\n                onClick: () => handleRemoveFields(index),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link\",\n                type: \"button\",\n                onClick: () => handleAddFields(),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, `${items}~${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mr-2\",\n            type: \"submit\",\n            onSubmit: handleSubmit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light mr-2\",\n            onClick: clearSelectedShoppingList,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger mr-2\",\n            onClick: () => {\n              handleDelete();\n              clearSelectedShoppingList();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateShoppingListsForm, \"HSvq2UJp8IfcXeRDzoLA8YluZRg=\");\n\n_c = UpdateShoppingListsForm;\nexport default UpdateShoppingListsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateShoppingListsForm\");","map":{"version":3,"sources":["/Users/brianhinterlong/Documents/Sites/tfn-full/client/src/components/shopping/UpdateShoppingListForm.js"],"names":["React","useState","useEffect","Fragment","api","UpdateShoppingListsForm","props","name","setName","items","setItems","quantity","unit","itemName","selectedShoppingList","setSelectedShoppingList","clearSelectedShoppingList","clearHandle","id","get","then","response","console","log","data","catch","error","handleAddFields","values","push","handleRemoveFields","index","splice","handleInputChange","event","target","value","handleNameChange","nameValue","reqBody","JSON","stringify","handleSubmit","e","preventDefault","put","handleDelete","delete","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport api from \"../../utils/api\"\n//import userEvent from \"@testing-library/user-event\";\n\nconst UpdateShoppingListsForm = (props) => {\n    const [name, setName] = useState(props.name);\n    const [items, setItems] = useState([{ quantity: \"\", unit: \"\", itemName: \"\" }]);\n    const [selectedShoppingList, setSelectedShoppingList] = useState(props.selectedShoppingList);\n    const clearSelectedShoppingList = props.clearHandle;\n\n        useEffect(() => {\n            const id = selectedShoppingList.id;\n\n            api.get(`http://3.92.28.166:5000/api/shopping_lists/${id}`)\n            .then((response) => {\n            console.log(response.data);\n            setName(response.data.name);\n            setItems(response.data.items);\n            }).catch((error) => {console.log(\"error\", error)});\n    \n            console.log(selectedShoppingList);\n            setSelectedShoppingList(props.selectedShoppingList);\n            console.log(`After: ${selectedShoppingList}`);\n        }, [props.selectedShoppingList, selectedShoppingList])\n       \n   \n\n    const handleAddFields = () => {\n        const values = [...items];\n        values.push({ quantity: \"\", unit: \"\", itemName: \"\" });\n        setItems(values);\n    };\n\n    const handleRemoveFields = (index) => {\n        const values = [...items];\n        if(index > 0){\n        values.splice(index, 1);\n        }\n        setItems(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...items];\n        if (event.target.name === \"quantity\") {\n            values[index].quantity = event.target.value;\n        } else if (event.target.name === \"unit\") {\n            values[index].unit = event.target.value;\n        } else if (event.target.name === \"item\") {\n            values[index].itemName = event.target.value;\n        } \n        setItems(values);\n    };\n\n    const handleNameChange = (event) => {\n        let nameValue = name;\n        if (event.target.name === 'name'){\n            nameValue = event.target.value;\n        }\n        setName(nameValue);\n    }\n\n    const reqBody = JSON.stringify({name, items}, null, 2);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        //let res = await api.post('/shopping_lists', reqBody);\n        api.put(`http://3.92.28.166:5000/api/shopping_lists/${selectedShoppingList.id}`, reqBody)\n        .then((response) => {console.log(response.data)}).catch((error) => {console.log(\"error\", error)});\n        console.log(reqBody);\n    };\n\n    const handleDelete = () => {\n        api.delete(`http://3.92.28.166:5000/api/shopping_lists/${selectedShoppingList.id}`)\n        .then((response) => {console.log(response.data)}).catch((error) => {console.log(\"error\", error)});\n    }\n\n    \n\n    return (\n        <>\n        <div className=\"create-shopping-list d-flex p-2\">\n            <h1>{name}</h1>\n            <form onSubmit={handleSubmit} className={\"form-group border border-primary p-2\"}>\n                <div className=\"form-row\">\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={name}\n                        onChange={(event) => handleNameChange(event)}\n                    />\n                </div>\n                <br />\n                <div>\n                    Items:\n                </div>\n                <br />\n                <div className=\"form-row\">\n                    {items.map((item, index) => (\n                        <Fragment key={`${items}~${index}`}>\n                            <div className=\"form-group col-sm-3\">\n                                <label htmlFor=\"quanity\">Quantity</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"quantity\"\n                                    name=\"quantity\"\n                                    value={item.quantity}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                />\n                            </div>\n                            <div className=\"form-group col-sm-3\">\n                                <label htmlFor=\"unit\">Unit</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"unit\"\n                                    name=\"unit\"\n                                    value={item.unit}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                />\n                            </div>\n                            <div className=\"form-group col-sm-3\">\n                                <label htmlFor=\"item\">Item</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"item\"\n                                    name=\"item\"\n                                    value={item.itemName}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                />\n                            </div>\n                            <div className=\"form-group col-sm-2\">\n                                <button\n                                    className=\"btn btn-link\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveFields(index)}\n                                >\n                                    -\n                                </button>\n                                <button\n                                    className=\"btn btn-link\"\n                                    type=\"button\"\n                                    onClick={() => handleAddFields()}\n                                >\n                                    +\n                                </button>\n                            </div>\n                        </Fragment>\n                    ))}\n                </div>\n                <div className=\"submit-button\">\n                    <button\n                        className=\"btn btn-primary mr-2\"\n                        type=\"submit\"\n                        onSubmit={handleSubmit}\n                    >\n                        Save\n                    </button>\n\n                    <button\n                        className=\"btn btn-light mr-2\"\n                        onClick={clearSelectedShoppingList}\n                    >\n                        Clear\n                    </button>\n\n                    <button\n                        className=\"btn btn-danger mr-2\"\n                        onClick={() => {handleDelete(); clearSelectedShoppingList()}}\n                    >\n                        Delete\n                    </button>\n\n                    \n                </div>\n                <br />\n            </form>\n        </div>\n        </>\n    );\n};\n\nexport default UpdateShoppingListsForm;"]},"metadata":{},"sourceType":"module"}