{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brianhinterlong/Documents/Sites/devconnector_2.0/client/src/components/CreateShoppingList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst CreateShoppingList = () => {\n  _s();\n\n  const [inputFields, setInputFields] = useState([{\n    quantity: \"\",\n    unit: \"\",\n    item: \"\"\n  }]);\n\n  const handleAddFields = () => {\n    const values = [...inputFields];\n    values.push({\n      quantity: \"\",\n      unit: \"\",\n      item: \"\"\n    });\n    setInputFields(values);\n  };\n\n  const handleRemoveFields = index => {\n    const values = [...inputFields];\n    values.splice(index, 1);\n    setInputFields(values);\n  };\n\n  const handleInputChange = (index, event) => {\n    const values = [...inputFields];\n\n    if (event.target.name === \"quantity\") {\n      values[index].quantity = event.target.value;\n    } else if (event.target.name === \"unit\") {\n      values[index].unit = event.target.value;\n    } else if (event.target.name === \"item\") {\n      values[index].item = event.target.value;\n    }\n\n    setInputFields(values);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"inputFields\", inputFields);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Shopping List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: inputFields.map((inputField, index) => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-sm-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"quanity\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"quantity\",\n              name: \"quantity\",\n              value: inputField.quantity,\n              onChange: event => handleInputChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-sm-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit\",\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"unit\",\n              name: \"unit\",\n              value: inputField.unit,\n              onChange: event => handleInputChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-sm-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"item\",\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"item\",\n              name: \"item\",\n              value: inputField.item,\n              onChange: event => handleInputChange(index, event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-sm-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link\",\n              type: \"button\",\n              onClick: () => handleRemoveFields(index),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link\",\n              type: \"button\",\n              onClick: () => handleAddFields(),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, `${inputField}~${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-2\",\n          type: \"submit\",\n          onSubmit: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(inputFields, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateShoppingList, \"H12YW9JQaXsnTyt37seUSRxyH1w=\");\n\n_c = CreateShoppingList;\nexport default CreateShoppingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateShoppingList\");","map":{"version":3,"sources":["/Users/brianhinterlong/Documents/Sites/devconnector_2.0/client/src/components/CreateShoppingList.js"],"names":["React","useState","Fragment","ReactDOM","CreateShoppingList","inputFields","setInputFields","quantity","unit","item","handleAddFields","values","push","handleRemoveFields","index","splice","handleInputChange","event","target","name","value","handleSubmit","e","preventDefault","console","log","map","inputField","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst CreateShoppingList = () => {\n    const [inputFields, setInputFields] = useState([\n        { quantity: \"\", unit: \"\", item: \"\" }\n    ]);\n\n    const handleAddFields = () => {\n        const values = [...inputFields];\n        values.push({ quantity: \"\", unit: \"\", item: \"\" });\n        setInputFields(values);\n    };\n\n    const handleRemoveFields = (index) => {\n        const values = [...inputFields];\n        values.splice(index, 1);\n        setInputFields(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...inputFields];\n        if (event.target.name === \"quantity\") {\n            values[index].quantity = event.target.value;\n        } else if (event.target.name === \"unit\") {\n            values[index].unit = event.target.value;\n        } else if (event.target.name === \"item\") {\n            values[index].item = event.target.value;\n        }\n\n        setInputFields(values);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"inputFields\", inputFields);\n    };\n\n    return (\n        <>\n            <h1>Create Shopping List</h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-row\">\n                    {inputFields.map((inputField, index) => (\n                        <Fragment key={`${inputField}~${index}`}>\n                            <div className=\"form-group col-sm-3\">\n                                <label htmlFor=\"quanity\">Quantity</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"quantity\"\n                                    name=\"quantity\"\n                                    value={inputField.quantity}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                />\n                            </div>\n                            <div className=\"form-group col-sm-3\">\n                                <label htmlFor=\"unit\">Unit</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"unit\"\n                                    name=\"unit\"\n                                    value={inputField.unit}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                />\n                            </div>\n                            <div className=\"form-group col-sm-3\">\n                                <label htmlFor=\"item\">Item</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"item\"\n                                    name=\"item\"\n                                    value={inputField.item}\n                                    onChange={(event) => handleInputChange(index, event)}\n                                />\n                            </div>\n                            <div className=\"form-group col-sm-2\">\n                                <button\n                                    className=\"btn btn-link\"\n                                    type=\"button\"\n                                    onClick={() => handleRemoveFields(index)}\n                                >\n                                    -\n                                </button>\n                                <button\n                                    className=\"btn btn-link\"\n                                    type=\"button\"\n                                    onClick={() => handleAddFields()}\n                                >\n                                    +\n                                </button>\n                            </div>\n                        </Fragment>\n                    ))}\n                </div>\n                <div className=\"submit-button\">\n                    <button\n                        className=\"btn btn-primary mr-2\"\n                        type=\"submit\"\n                        onSubmit={handleSubmit}\n                    >\n                        Save\n                    </button>\n                </div>\n                <br />\n                <pre>{JSON.stringify(inputFields, null, 2)}</pre>\n            </form>\n        </>\n    );\n};\n\nexport default CreateShoppingList;\n"]},"metadata":{},"sourceType":"module"}